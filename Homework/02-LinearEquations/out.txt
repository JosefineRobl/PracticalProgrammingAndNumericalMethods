========== Exercise A, part 1 ==========
----- Matrix A before QR-decomposition -----
A =
[   0.680375,  -0.211234,   0.566198
    0.596880,   0.823295,  -0.604897
   -0.329554,   0.536459,  -0.444451
    0.107940,  -0.045206,   0.257742
   -0.270431,   0.026802,   0.904459 ]
----- Matrix A (in theory Q) after QR-decomposition -----
Q =
[   0.676140,  -0.319827,   0.318913
    0.593165,   0.734089,   0.038719
   -0.327503,   0.591667,   0.037196
    0.107268,  -0.062504,   0.204170
   -0.268748,   0.069621,   0.923973 ]
----- Matrix R after QR-decomposition -----
R =
[   1.006264,   0.157781,  -0.045839
    0.000000,   0.994027,  -0.841241
    0.000000,   0.000000,   1.028935 ]
R is upper triangular with a tolerance of 0.0001.
----- Checking for Q^TQ = 1 -----
Q^TQ =
[   1.000000,  -0.000000,   0.000000
    0.000000,   1.000000,   0.000000
    0.000000,   0.000000,   1.000000 ]
Q^TQ is equal to the identity matrix with a tolerance of 0.001.
----- Checking for QR = A -----
QR =
[   0.680375,  -0.211234,   0.566198
    0.596880,   0.823295,  -0.604897
   -0.329554,   0.536459,  -0.444451
    0.107940,  -0.045206,   0.257742
   -0.270431,   0.026802,   0.904459 ]
A =
[   0.680375,  -0.211234,   0.566198
    0.596880,   0.823295,  -0.604897
   -0.329554,   0.536459,  -0.444451
    0.107940,  -0.045206,   0.257742
   -0.270431,   0.026802,   0.904459 ]
QR is equal to A with a tolerance of 0.001.

========== Exercise A, part 2 ==========
----- Matrix A before QR-decomposition -----
A =
[   0.271423,   0.434594,  -0.716795,   0.213938,  -0.967399
   -0.725537,   0.608354,  -0.686642,  -0.198111,  -0.740419
    0.997849,  -0.563486,   0.025865,   0.678224,   0.225280
    0.275105,   0.048574,  -0.012834,   0.945550,  -0.414966
    0.053490,   0.539828,  -0.199543,   0.783059,  -0.433371 ]
----- Vector b before QR-decomposition -----
b =
[   0.832390
   -0.514226
   -0.782382
   -0.407937
    0.542715 ]
----- Matrix A (in theory Q) and R after QR-decomposition -----
Q =
[   0.209763,   0.661765,  -0.416917,  -0.450745,  -0.375600
   -0.560712,   0.281298,  -0.571560,   0.452612,   0.273741
    0.771162,  -0.070433,  -0.385421,   0.248876,   0.435729
    0.212607,   0.216788,   0.193043,   0.726500,  -0.585435
    0.041338,   0.656491,   0.560075,   0.047222,   0.501395 ]
R =
[   1.293955,  -0.651846,   0.243620,   0.912382,   0.279825
    0.000000,   0.863338,  -0.803103,   0.757134,  -1.238800
    0.000000,   0.000000,   0.567096,   0.383739,   0.416866
    0.000000,   0.000000,   0.000000,   0.706614,  -0.164943
    0.000000,   0.000000,   0.000000,   0.000000,   0.284479 ]
----- Vector x after using QR-solver on QRx = b -----
x =
[   2.543228
    3.511977
    2.752705
   -1.751596
   -0.996147 ]
----- Checking that Ax = b -----
Recalling, the random vector b generated is:
b =
[   0.832390
   -0.514226
   -0.782382
   -0.407937
    0.542715 ]
Multiplying our A matrix with the found x from the solver yields:
Ax =
[   0.832390
   -0.514226
   -0.782382
   -0.407937
    0.542715 ]
Ax is equal to b with a tolerance of 0.001.

========== Exercise B ==========
----- Matrix A before QR-decomposition -----
A =
[  -0.295083,   0.615449,   0.838053,  -0.860489,   0.898654
    0.051991,  -0.827888,  -0.615572,   0.326454,   0.780465
   -0.302214,  -0.871657,  -0.959954,  -0.084597,  -0.873808
   -0.523440,   0.941268,   0.804416,   0.701840,  -0.466669
    0.079521,  -0.249586,   0.520497,   0.025071,   0.335448 ]
----- Inverse matrix B found from QR Gram-Schmidt inverse -----
B =
[  -0.883345,  -0.686613,  -0.980492,  -0.888067,   0.174406
    0.057036,  -0.070646,  -0.565218,   0.082730,  -1.345675
   -0.017473,  -0.410883,   0.102833,   0.130228,   1.451828
   -0.504711,   0.524718,  -0.307003,   0.522849,   0.058942
    0.316675,   0.708534,  -0.324726,   0.030933,  -0.318622 ]
----- Checking that AB = BA = I -----
AB =
[   1.000000,   0.000000,   0.000000,  -0.000000,  -0.000000
   -0.000000,   1.000000,  -0.000000,   0.000000,  -0.000000
    0.000000,   0.000000,   1.000000,  -0.000000,  -0.000000
   -0.000000,   0.000000,  -0.000000,   1.000000,  -0.000000
   -0.000000,  -0.000000,  -0.000000,  -0.000000,   1.000000 ]
BA =
[   1.000000,   0.000000,   0.000000,  -0.000000,  -0.000000
   -0.000000,   1.000000,   0.000000,   0.000000,  -0.000000
    0.000000,   0.000000,   1.000000,  -0.000000,   0.000000
    0.000000,  -0.000000,  -0.000000,   1.000000,  -0.000000
   -0.000000,  -0.000000,  -0.000000,   0.000000,   1.000000 ]
AB is equal to the identity matrix with a tolerance of 0.001.
BA is equal to the identity matrix with a tolerance of 0.001.
AB is equal to BA with a tolerance of 0.001.

========== Exercise C ==========
The dimension value and the correspinding times can be seen in 'data.txt'.
The plot of the runtimes can be seen in 'timeDependence.svg'.
